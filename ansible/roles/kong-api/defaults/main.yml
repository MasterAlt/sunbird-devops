
---
kong_admin_api_url: "http://{{kong_host}}:8001"

# Default statsd_metrics
statsd_metrics: ["request_count", "status_count", "latency", "upstream_latency", "request_size", "response_size"]
statsd_host: statsd-service
statsd_port: 9125

statsd_pulgin:
  name: statsd
  config.metrics: "{{ statsd_metrics }}"
  config.host: "{{ statsd_host }}"
  config.port: "{{ statsd_port }}"

# Default Rate limits
small_rate_limit_per_hour: 100
medium_rate_limit_per_hour: 5000
x_medium_rate_limit_per_hour: 5000
large_rate_limit_per_hour: 10000
x2_large_rate_limit_per_hour: 15000
x_large_rate_limit_per_hour: 30000

premium_consumer_small_rate_limit_per_hour: 1000
premium_consumer_medium_rate_limit_per_hour: 10000
premium_consumer_large_rate_limit_per_hour: 100000

# Default max request size in MB
small_request_size_limit: 1
medium_request_size_limit: 10
large_request_size_limit: 100

# Default service prefixes
private_content_prefix: /private/content
content_prefix: /content
course_service_prefix: /course
itemset_prefix: /itemset
user_service_prefix: /user
data_service_prefix: /data
notes_service_prefix: /notes
org_service_prefix: /org
echo_service_prefix: /echo
composite_service_prefix: /composite
api_manager_perfix: /api-manager
meta_service_prefix: /meta
dashboard_service_prefix: /dashboard
announcement_service_prefix: /announcement
dialcode_service_prefix: /dialcode
channel_service_prefix: /channel
framework_service_prefix: /framework
badge_service_prefix: /badging
plugin_service_prefix: /plugins
config_service_prefix: /config
textbook_service_prefix: /textbook
lock_service_prefix: /lock
otp_service_prefix: /otp
sso_service_prefix: /sso
cert_service_prefix: /cert
cert_registry_service_prefix: /certreg
desktop_app_prefix: /desktop
license_api_prefix: /license

# Service URLs
knowledge_mw_service_url: "http://knowledge-mw-service:5000"
learning_service_url: "http://learner-service:9000"
vm_learning_service_url: "http://{{learningservice_ip}}:8080/learning-service"
telemetry_service_url: "http://telemetry-service:9001"
player_service_url: "http://player:3000"
echo_service_url: "http://echo:9595"
am_util_url: "http://adminutil:4000"
config_service_url: "http://config-service:8080"
lms_service_url: "http://lms-service:9000"
cert_service_url: "http://cert-service:9000"
cert_registry_service_url: "http://cert-registry-service:9000"
content_service_url: "http://content-service:9000"

premium_consumer_rate_limits:
  - api: createContent
    config.hour: "{{ premium_consumer_small_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local
  - api: updateContent
    config.hour: "{{ premium_consumer_medium_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local
  - api: readContent
    config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local

kong_apis:
  - name: getAllData
    request_path: "{{ data_service_prefix }}/v1/object/read/list"
    upstream_url: "{{ learning_service_url }}/v1/object/read/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getData
    request_path: "{{ data_service_prefix }}/v1/object/read"
    upstream_url: "{{ learning_service_url }}/v1/object/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createData
    request_path: "{{ data_service_prefix }}/v1/object/create"
    upstream_url: "{{ learning_service_url }}/v1/object/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

  - name: updateData
    request_path: "{{ data_service_prefix }}/v1/object/update"
    upstream_url: "{{ learning_service_url }}/v1/object/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteData
    request_path: "{{ data_service_prefix }}/v1/object/delete"
    upstream_url: "{{ learning_service_url }}/v1/object/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchData
    request_path: "{{ data_service_prefix }}/v1/object/search"
    upstream_url: "{{ learning_service_url }}/v1/object/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createLocation
    request_path: "{{ org_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getLocation
    request_path: "{{ org_service_prefix }}/v1/location/read"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: deleteLocation
    request_path: "{{ org_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateLocation
    request_path: "{{ org_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: profileVisibility
    request_path: "{{ user_service_prefix }}/v1/profile/visibility"
    upstream_url: "{{ learning_service_url }}/v1/user/profile/visibility"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: sendNotification
    request_path: "{{ data_service_prefix }}/v1/notification/send"
    upstream_url: "{{ learning_service_url }}/v1/notification/send"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: metricsSearchData
    request_path: "{{ data_service_prefix }}/v1/object/metrics"
    upstream_url: "{{ learning_service_url }}/v1/object/metrics"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listSystemSettings
    request_path: "{{ data_service_prefix }}/v1/system/settings/list"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getAudienceCount
    request_path: "{{ data_service_prefix }}/v1/notification/audience"
    upstream_url: "{{ learning_service_url }}/v1/notification/audience"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: generateDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/generate"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: qrCodeBatchProcessStatus
    request_path: "{{ dialcode_service_prefix }}/v1/process/status"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: qrCodeBatchProcessRetry
    request_path: "{{ dialcode_service_prefix }}/v1/process/retry"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/retry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: linkDialcodeContent
    request_path: "{{ dialcode_service_prefix }}/v1/content/link"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/content/link"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readChannel
    request_path: "{{ channel_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listChannel
    request_path: "{{ channel_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchChannel
    request_path: "{{ channel_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createChannel
    request_path: "{{ channel_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateChannel
    request_path: "{{ channel_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFramework
    request_path: "{{ framework_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listFramework
    request_path: "{{ framework_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFramework
    request_path: "{{ framework_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFramework
    request_path: "{{ framework_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: copyFramework
    request_path: "{{ framework_service_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCourseHierarchy
    request_path: '{{ course_service_prefix }}/v1/hierarchy/update'
    upstream_url: '{{ knowledge_mw_service_url }}/v1/course/hierarchy/update'
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - '{{ statsd_pulgin }}'
    - name: acl
      config.whitelist: "['courseUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: '{{ medium_rate_limit_per_hour }}'
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: '{{ small_request_size_limit }}'

  - name: createAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAssertionList
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: revokeAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createissuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getIssuerDetails
    request_path: "{{ badge_service_prefix }}/v1/issuer/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAllIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/list"
    upstream_url: "{{ learning_service_url }}/v1/issuer/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createForm
    request_path: "{{ data_service_prefix }}/v1/form/create"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateForm
    request_path: "{{ data_service_prefix }}/v1/form/update"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dataUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: readForm
    request_path: "{{ data_service_prefix }}/v1/form/read"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationCreate
    request_path: "{{ data_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationUpdate
    request_path: "{{ data_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationSearch
    request_path: "{{ data_service_prefix }}/v1/location/search"
    upstream_url: "{{ learning_service_url }}/v1/location/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationUpload
    request_path: "{{ data_service_prefix }}/v1/bulk/location/upload"
    upstream_url: "{{ learning_service_url }}/v1/bulk/location/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: copyContent
    request_path: "{{ content_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: fetchURLMetaInformation
    request_path: "{{ content_prefix }}/v1/fetchmeta"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/url/fetchmeta"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishFramework
    request_path: "{{ framework_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: pluginSearch
    request_path: "{{ plugin_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/plugins/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCollaborators
    request_path: "{{ content_prefix }}/v1/collaborator/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/collaborator/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: reserveDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/reserve"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/reserve"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: releaseDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/release"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/release"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['dialcodeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createLock
    request_path: "{{ lock_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: refreshLock
    request_path: "{{ lock_service_prefix }}/v1/refresh"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/refresh"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: retireLock
    request_path: "{{ lock_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listLock
    request_path: "{{ lock_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createSession
    request_path: "{{ sso_service_prefix }}/v1/create/session"
    upstream_url: "{{ player_service_url }}/v1/sso/create/session"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  # Data pipeline

  - name: "deviceRegister"
    request_path: "/v3/device/register"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/v1/device/register"
    strip_request_path: true
    plugins:
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "deviceProfile"
    request_path: "/v3/device/profile"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/v1/device/profile"
    strip_request_path: true
    plugins:
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }   

  - name: "experimentcreate"
    request_path: "{{ data_service_prefix }}/v1/experiement/create"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/experiment/create"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }


  - name: "experimentread"
    request_path: "{{ data_service_prefix }}/v1/experiement/get"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/experiment/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "addSystemSettings"
    request_path: "{{ data_service_prefix }}/v1/system/settings/set"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/set"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['dataAdmin']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{  medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getSystemSettings"
    request_path: "{{ data_service_prefix }}/v1/system/settings/get"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{  medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }
     - name: acl
       config.whitelist: "['publicUser',"

  - name: onboardConsumer
    request_path: "{{ api_manager_perfix }}/v1/consumer/create/jwt"
    upstream_url: "{{ am_util_url }}/v1/consumer/create/jwt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['kongConsumer']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: KongConsumerApi
    request_path: "{{ api_manager_perfix }}/v1/consumer"
    upstream_url: "{{ am_util_url }}/v1/consumer"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['kongConsumer']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/upload"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: downloadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/download"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: acceptTermsAndCondition
    request_path: "{{ user_service_prefix }}/v1/tnc/accept"
    upstream_url: "{{ learning_service_url }}/v1/user/tnc/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: generateOtp
    request_path: "{{ otp_service_prefix }}/v1/generate"
    upstream_url: "{{ learning_service_url }}/v1/otp/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: verifyOtp
    request_path: "{{ otp_service_prefix }}/v1/verify"
    upstream_url: "{{ learning_service_url }}/v1/otp/verify"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserByKey
    request_path: "{{ user_service_prefix  }}/v1/get"
    upstream_url: "{{ learning_service_url }}/v1/user/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['appUpdate',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileAppTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['mobileAdminTeacherAid']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileDeviceTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['mobileAppTeacherAid']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: "contentBadgeLink"
    request_path: "{{ badge_service_prefix }}/v1/content/link"
    upstream_url: "{{ lms_service_url }}/v1/content/link"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "contentBadgeUnLink"
    request_path: "{{ badge_service_prefix }}/v1/content/unlink"
    upstream_url: "{{ lms_service_url }}/v1/content/unlink"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "privateUserUpdate"
    request_path: "{{ user_service_prefix }}/private/v1/update"
    upstream_url: "{{ learning_service_url }}/private/user/v1/update"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getUserType"
    request_path: "{{ user_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/user/type/list"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "masterLocationDelete"
    request_path: "{{data_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/location/delete"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['locationAdmin']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "privateUserRead"
    request_path: "{{ user_service_prefix }}/private/v1/read"
    upstream_url: "{{ learning_service_url }}/private/user/v1/read"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "['publicUser']"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: privateUserAssignRole
    request_path: "{{ user_service_prefix }}/private/v1/assign/role"
    upstream_url: "{{ learning_service_url }}/private/user/v1/assign/role"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl', config.whitelist: "['publicUser']" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "telemetryErrorLogging"
    request_path: "/data/v1/client/logs"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/data/v1/client/logs"
    strip_request_path: true
    plugins:
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: generateCertificate
    request_path: "{{ cert_service_prefix }}/v1/certs/generate"
    upstream_url: "{{ cert_service_url }}/v1/certs/generate"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "['orgUpdate']"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/create"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/create"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "['orgUpdate']"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/update"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/update"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "['orgUpdate']"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: readCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/read"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/read"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "['orgUpdate']"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: "orgAssignKeys"
    request_path: "{{ org_service_prefix }}/v1/assign/key"
    upstream_url: "{{ learning_service_url }}/v1/org/assign/key"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "['orgAdmin']"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "mergeUserAccounts"
    request_path: "{{ user_service_prefix }}/v1/account/merge"
    upstream_url: "{{ learning_service_url }}/private/user/v1/account/merge"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "['publicUser',"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: qrCodeDownload
    request_path: "{{ course_service_prefix }}/v1/qrcode/download"
    upstream_url: "{{ lms_service_url }}/v1/course/qrcode/download"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "['courseUser']"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseIssueCertificate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/issue"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/issue"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['courseUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseBatchAddCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['courseUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseBatchRemoveCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['courseUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: downloadCertificate
    request_path: "{{ user_service_prefix }}/v1/certs/download"
    upstream_url: "{{ learning_service_url }}/v1/user/certs/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: UserBulkUploadv2
    request_path: "{{ user_service_prefix }}/v2/bulk/upload"
    upstream_url: "{{ learning_service_url }}/v2/bulk/user/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['userAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: downloadRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/download"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: validateRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/validate"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/validate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/add"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userMigrate
    request_path: "{{ user_service_prefix }}/v1/migrate"
    upstream_url: "{{ learning_service_url }}/v1/user/migrate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: verifyRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/verify"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/verify"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateDesktopApp
    request_path: "{{ desktop_app_prefix }}/v1/update"
    upstream_url: "{{ player_service_url }}/v1/desktop/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadCrashLogs
    request_path: "{{ desktop_app_prefix }}/v1/upload-crash-logs"
    upstream_url: "{{ player_service_url }}/v1/desktop/upload-crash-logs"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['contentUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userFeed
    request_path: "{{ user_service_prefix }}/v1/feed"
    upstream_url: "{{ learning_service_url }}/v1/user/feed"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser',"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: freshDesk
    request_path: "/tickets/v1/create"
    upstream_url: "{{ freshDesk_url }}/api/v2/tickets"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - name: request-transformer
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"
    - name: request-transformer
      config.replace.headers: "Authorization: Basic {{ freshDesk_token }}"

  - name: LicenseAPI
    request_path: "{{ license_api_prefix }}/v3"
    upstream_url: "{{ content_service_url }}/license/v3"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['domainUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userExistenceApi
    request_path: "{{ user_service_prefix  }}/v1/exists"
    upstream_url: "{{ learning_service_url }}/v1/user/exists"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['appUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserLearnerV3
    request_path: "{{ user_service_prefix }}/v1/signup"
    upstream_url: "{{ learning_service_url }}/v1/user/signup"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['userUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserVersion3
    request_path: "{{ user_service_prefix }}/v3/create"
    upstream_url: "{{ learning_service_url }}/v3/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['userUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: searchRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/search"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: readRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/read"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "['publicUser']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"
