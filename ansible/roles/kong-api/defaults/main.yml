
---
kong_admin_api_url: "http://{{kong_host}}:8001"

# Default statsd_metrics
statsd_metrics: ["request_count", "status_count", "latency", "upstream_latency", "request_size", "response_size"]
statsd_host: statsd-service
statsd_port: 9125

statsd_pulgin:
  name: statsd
  config.metrics: "{{ statsd_metrics }}"
  config.host: "{{ statsd_host }}"
  config.port: "{{ statsd_port }}"

# Default Rate limits
small_rate_limit_per_hour: 100
medium_rate_limit_per_hour: 5000
x_medium_rate_limit_per_hour: 5000
large_rate_limit_per_hour: 10000
x2_large_rate_limit_per_hour: 15000
x_large_rate_limit_per_hour: 30000

premium_consumer_small_rate_limit_per_hour: 1000
premium_consumer_medium_rate_limit_per_hour: 10000
premium_consumer_large_rate_limit_per_hour: 100000

# Default max request size in MB
small_request_size_limit: 1
medium_request_size_limit: 10
large_request_size_limit: 100

# Default service prefixes
private_content_prefix: /private/content
content_prefix: /content
course_service_prefix: /course
itemset_prefix: /itemset
user_service_prefix: /user
data_service_prefix: /data
notes_service_prefix: /notes
org_service_prefix: /org
echo_service_prefix: /echo
composite_service_prefix: /composite
api_manager_perfix: /api-manager
meta_service_prefix: /meta
dashboard_service_prefix: /dashboard
announcement_service_prefix: /announcement
dialcode_service_prefix: /dialcode
channel_service_prefix: /channel
framework_service_prefix: /framework
badge_service_prefix: /badging
plugin_service_prefix: /plugins
config_service_prefix: /config
textbook_service_prefix: /textbook
lock_service_prefix: /lock
otp_service_prefix: /otp
sso_service_prefix: /sso
cert_service_prefix: /cert
cert_registry_service_prefix: /certreg
desktop_app_prefix: /desktop
license_api_prefix: /license

# Service URLs
knowledge_mw_service_url: "http://knowledge-mw-service:5000"
learning_service_url: "http://learner-service:9000"
vm_learning_service_url: "http://{{learningservice_ip}}:8080/learning-service"
telemetry_service_url: "http://telemetry-service:9001"
player_service_url: "http://player:3000"
echo_service_url: "http://echo:9595"
am_util_url: "http://adminutil:4000"
config_service_url: "http://config-service:8080"
lms_service_url: "http://lms-service:9000"
cert_service_url: "http://cert-service:9000"
cert_registry_service_url: "http://cert-registry-service:9000"
content_service_url: "http://content-service:9000"

premium_consumer_rate_limits:
  - api: createContent
    config.hour: "{{ premium_consumer_small_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local
  - api: updateContent
    config.hour: "{{ premium_consumer_medium_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local
  - api: readContent
    config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local

kong_apis:
  - name: ItemSetAPIs
    request_path: "{{ itemset_prefix }}/v1"
    upstream_url: "{{ knowledge_mw_service_url }}/itemset/v1"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ ItemSetAPIs_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: PrivateContentCreateAPIs
    request_path: "{{ private_content_prefix }}/v3/create"
    upstream_url: "{{ content_service_url }}/content/v3/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentCreateAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: PrivateContentUpdateAPIs
    request_path: "{{ private_content_prefix }}/v3/update"
    upstream_url: "{{ content_service_url }}/content/v3/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentUpdateAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: PrivateContentReadAPIs
    request_path: "{{ private_content_prefix }}/v3/read"
    upstream_url: "{{ content_service_url }}/content/v3/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentReadAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createContent
    request_path: "{{ content_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchContent
    request_path: "{{ content_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/search"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateContent
    request_path: "{{ content_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readContent
    request_path: "{{ content_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: submitContentForReview
    request_path: "{{ content_prefix }}/v1/review"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/review"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ submitContentForReview_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishContent
    request_path: "{{ content_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishContent_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadContent
    request_path: "{{ content_prefix }}/v1/upload"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

  - name: retireContent
    request_path: "{{ content_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireContent_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createCourse
    request_path: "{{ course_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createCourse_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchCourse
    request_path: "{{ course_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchCourse_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCourse
    request_path: "{{ course_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateCourse_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readCourse
    request_path: "{{ course_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readCourse_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: submitCourseForReview
    request_path: "{{ course_service_prefix }}/v1/review"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/review"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ submitCourseForReview_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishCourse
    request_path: "{{ course_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishCourse_ACL | default(['courseAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: retireCourse
    request_path: "{{ course_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireCourse_ACL | default(['courseAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseHierarchy
    request_path: "{{ course_service_prefix }}/v1/hierarchy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/hierarchy"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseEnrolment
    request_path: "{{ course_service_prefix }}/v1/enrol"
    upstream_url: "{{ lms_service_url }}/v1/course/enroll"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseEnrolment_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseUnEnrolment
    request_path: "{{ course_service_prefix }}/v1/unenrol"
    upstream_url: "{{ lms_service_url }}/v1/course/unenroll"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseUnEnrolment_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listCourseEnrollments
    request_path: "{{ course_service_prefix }}/v1/user/enrollment/list"
    upstream_url: "{{ lms_service_url }}/v1/user/courses/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listCourseEnrollments_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readCourseEnrollment
    request_path: "{{ course_service_prefix }}/v1/user/enrollment/read"
    upstream_url: "{{ lms_service_url }}/v1/user/courses/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readCourseEnrollment_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readContentState
    request_path: "{{ course_service_prefix }}/v1/content/state/read"
    upstream_url: "{{ lms_service_url }}/v1/content/state/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readContentState_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateContentState
    request_path: "{{ course_service_prefix }}/v1/content/state/update"
    upstream_url: "{{ lms_service_url }}/v1/content/state/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateContentState_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUser
    request_path: "{{ user_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUser_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserVersion2
    request_path: "{{ user_service_prefix }}/v2/create"
    upstream_url: "{{ learning_service_url }}/v2/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUserVersion2_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateUser
    request_path: "{{ user_service_prefix }}/v1/update"
    upstream_url: "{{ learning_service_url }}/v1/user/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUser_ACL | default(['userUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserProfile
    request_path: "{{ user_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserProfile_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserProfileV2
    request_path: "{{ user_service_prefix }}/v2/read"
    upstream_url: "{{ learning_service_url }}/v2/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserProfileV2_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchUser
    request_path: "{{ user_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/user/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchUser_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPage
    request_path: "{{ data_service_prefix }}/v1/page/create"
    upstream_url: "{{ lms_service_url }}/v1/page/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createPage_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePage
    request_path: "{{ data_service_prefix }}/v1/page/update"
    upstream_url: "{{ lms_service_url }}/v1/page/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updatePage_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getPageSettings
    request_path: "{{ data_service_prefix }}/v1/page/read"
    upstream_url: "{{ lms_service_url }}/v1/page/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getPageSettings_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: dialAssemble
    request_path: "{{ data_service_prefix }}/v1/dial/assemble"
    upstream_url: "{{ lms_service_url }}/v1/page/assemble"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: assemblePage
    request_path: "{{ data_service_prefix }}/v1/page/assemble"
    upstream_url: "{{ lms_service_url }}/v1/page/assemble"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createNote
    request_path: "{{ notes_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/note/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createNote_ACL | default(['noteUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateNote
    request_path: "{{ notes_service_prefix }}/v1/update"
    upstream_url: "{{ learning_service_url }}/v1/note/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateNote_ACL | default(['noteUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readNote
    request_path: "{{ notes_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/note/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readNote_ACL | default(['noteUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchNotes
    request_path: "{{ notes_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/note/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchNotes_ACL | default(['noteUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createOrg
    request_path: "{{ org_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/org/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createOrg_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateOrg
    request_path: "{{ org_service_prefix }}/v1/update"
    upstream_url: "{{ learning_service_url }}/v1/org/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrg_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readOrg
    request_path: "{{ org_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/org/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readOrg_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchOrg
    request_path: "{{ org_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/org/search"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addMember
    request_path: "{{ org_service_prefix }}/v1/member/add"
    upstream_url: "{{ learning_service_url }}/v1/org/member/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addMember_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: removeMember
    request_path: "{{ org_service_prefix }}/v1/member/remove"
    upstream_url: "{{ learning_service_url }}/v1/org/member/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ removeMember_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: echo
    request_path: "{{ echo_service_prefix }}"
    upstream_url: "{{ echo_service_url }}"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ echo_ACL | default(['echoUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/create"
    upstream_url: "{{ lms_service_url }}/v1/page/section/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createPageSection_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/update"
    upstream_url: "{{ lms_service_url }}/v1/page/section/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updatePageSection_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listPageSections
    request_path: "{{ data_service_prefix }}/v1/page/section/list"
    upstream_url: "{{ lms_service_url }}/v1/page/section/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listPageSections_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readPageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/read"
    upstream_url: "{{ lms_service_url }}/v1/page/section/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readPageSection_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readRoleMapping
    request_path: "{{ data_service_prefix }}/v1/role/read"
    upstream_url: "{{ learning_service_url }}/v1/role/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readRoleMapping_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateOrgStatus
    request_path: "{{ org_service_prefix }}/v1/status/update"
    upstream_url: "{{ learning_service_url }}/v1/org/status/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgStatus_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readUserProfile
    request_path: "{{ user_service_prefix }}/v1/profile/read"
    upstream_url: "{{ learning_service_url }}/v1/user/getuser"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readUserProfile_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerMobileApp
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileApp_ACL | default(['mobileAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerMobileDevice
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileDevice_ACL | default(['mobileApp']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerDesktopApp
    request_path: "{{ api_manager_perfix }}/v1/consumer/desktop_app/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/desktop_app/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerDesktopApp_ACL | default(['desktopAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerDesktopDevice
    request_path: "{{ api_manager_perfix }}/v1/consumer/desktop_device/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/desktop_device/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerDesktopDevice_ACL | default(['desktopApp']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerMobileAppOpenRAP
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_openrap/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_openrap/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileAppOpenRAP_ACL | default(['mobileAdminOpenRAP']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileDeviceOpenRAP
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_openrap/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_openrap/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileDeviceOpenRAP_ACL | default(['mobileAppOpenRAP']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: compositeSearch
    request_path: "{{ composite_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ compositeSearch_ACL | default(['appUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listTerms
    request_path: "{{ meta_service_prefix }}/v1/terms/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/terms/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listTerms_ACL | default(['configUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listResourceBundles
    request_path: "{{ meta_service_prefix }}/v1/resourcebundles/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/resourcebundles/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listResourceBundles_ACL | default(['configUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listOrdinals
    request_path: "{{ meta_service_prefix }}/v1/ordinals/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/ordinals/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listOrdinals_ACL | default(['configUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: telemetry
    request_path: "{{ data_service_prefix }}/v1/telemetry"
    upstream_url: "{{ telemetry_service_url }}/v1/telemetry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ telemetry_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: flagContent
    request_path: "{{ content_prefix }}/v1/flag"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ flagContent_ACL | default(['contentUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: acceptContentFlag
    request_path: "{{ content_prefix }}/v1/flag/accept"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ acceptContentFlag_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: rejectContentFlag
    request_path: "{{ content_prefix }}/v1/flag/reject"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag/reject"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ rejectContentFlag_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseProgressDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/progress/course"
    upstream_url: "{{ lms_service_url }}/v1/dashboard/progress/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getCourseProgressDashboard_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseProgressDashboardV2
    request_path: "{{ dashboard_service_prefix }}/v2/progress/course"
    upstream_url: "{{ lms_service_url }}/v2/dashboard/progress/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getCourseProgressDashboardV2_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseConsumptionDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/course"
    upstream_url: "{{ lms_service_url }}/v1/dashboard/consumption/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getCourseConsumptionDashboard_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserConsumptionDasbhoard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/user"
    upstream_url: "{{ learning_service_url }}/v1/dashboard/consumption/user"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserConsumptionDasbhoard_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userBulkUpload
    request_path: "{{ user_service_prefix }}/v1/upload"
    upstream_url: "{{ learning_service_url }}/v1/user/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userBulkUpload_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: orgBulkUpload
    request_path: "{{ org_service_prefix }}/v1/upload"
    upstream_url: "{{ learning_service_url }}/v1/org/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ orgBulkUpload_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: checkUploadJobStatus
    request_path: "{{ data_service_prefix }}/v1/upload/status"
    upstream_url: "{{ learning_service_url }}/v1/upload/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ checkUploadJobStatus_ACL | default(['appAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUploadJobStatusLink
    request_path: "{{ data_service_prefix }}/v1/upload/statusDownloadLink"
    upstream_url: "{{ learning_service_url }}/v1/upload/statusDownloadLink"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUploadJobStatusLink_ACL | default(['appAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createBatch
    request_path: "{{ course_service_prefix }}/v1/batch/create"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateBatch
    request_path: "{{ course_service_prefix }}/v1/batch/update"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addUserToBatch
    request_path: "{{ course_service_prefix }}/v1/batch/user/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/users/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addUserToBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: removeUserFromBatch
    request_path: "{{ course_service_prefix }}/v1/batch/user/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/users/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ removeUserFromBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getBatch
    request_path: "{{ course_service_prefix }}/v1/batch/read"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getBatch_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getParticipants
    request_path: "{{ course_service_prefix }}/v1/batch/participants/list"
    upstream_url: "{{ lms_service_url }}/v1/batch/participants/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getParticipants_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: assignRole
    request_path: "{{ user_service_prefix }}/v1/role/assign"
    upstream_url: "{{ learning_service_url }}/v1/user/assign/role"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ assignRole_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: indexSync
    request_path: "{{ data_service_prefix }}/v1/index/sync"
    upstream_url: "{{ learning_service_url }}/v1/data/sync"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ indexSync_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: blockUser
    request_path: "{{ user_service_prefix }}/v1/block"
    upstream_url: "{{ learning_service_url }}/v1/user/block"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ blockUser_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: unblockUser
    request_path: "{{ user_service_prefix }}/v1/unblock"
    upstream_url: "{{ learning_service_url }}/v1/user/unblock"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ unblockUser_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadMedia
    request_path: "{{ content_prefix }}/v1/media/upload"
    upstream_url: "{{ learning_service_url }}/v1/file/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadMedia_ACL | default(['contentUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: listCourseBatches
    request_path: "{{ course_service_prefix }}/v1/batch/list"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listCourseBatches_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: batchBulkEnrolment
    request_path: "{{ course_service_prefix }}/v1/batch/bulk/enrollment"
    upstream_url: "{{ lms_service_url }}/v1/batch/bulk/enrollment"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ batchBulkEnrolment_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: batchBulkUnEnrolment
    request_path: "{{ course_service_prefix }}/v1/batch/bulk/unenrollment"
    upstream_url: "{{ lms_service_url }}/v1/batch/bulk/unenrollment"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ batchBulkUnEnrolment_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getTenantInfo
    request_path: "{{ org_service_prefix }}/v1/tenant/info"
    upstream_url: "{{ player_service_url }}/v1/tenant/info"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getTenantInfo_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getContentUploadUrl
    request_path: "{{ content_prefix }}/v1/upload/url/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/upload/url"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getContentUploadUrl_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: rejectContent
    request_path: "{{ content_prefix }}/v1/reject"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/reject"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ rejectContent_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: deleteNote
    request_path: "{{ notes_service_prefix }}/v1/delete"
    upstream_url: "{{ learning_service_url }}/v1/note/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteNote_ACL | default(['noteAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: sendEmailNotification
    request_path: "{{ user_service_prefix }}/v1/notification/email"
    upstream_url: "{{ learning_service_url }}/v1/notification/email"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ sendEmailNotification_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: listAllBadges
    request_path: "{{ org_service_prefix }}/v1/badges/list"
    upstream_url: "{{ learning_service_url }}/v1/badges/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listAllBadges_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: addBadgeToUser
    request_path: "{{ user_service_prefix }}/v1/badges/add"
    upstream_url: "{{ learning_service_url }}/v1/user/badges/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addBadgeToUser_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: listOrgTypes
    request_path: "{{ org_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/org/type/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listOrgTypes_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createOrgType
    request_path: "{{ org_service_prefix }}/v1/type/create"
    upstream_url: "{{ learning_service_url }}/v1/org/type/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createOrgType_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateOrgType
    request_path: "{{ org_service_prefix }}/v1/type/update"
    upstream_url: "{{ learning_service_url }}/v1/org/type/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgType_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateUserloginTime
    request_path: "{{ user_service_prefix }}/v1/update/logintime"
    upstream_url: "{{ learning_service_url }}/v1/user/update/logintime"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserloginTime_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getMediaTypes
    request_path: "{{ user_service_prefix }}/v1/mediatype/list"
    upstream_url: "{{ learning_service_url }}/v1/user/mediatype/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getMediaTypes_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: addUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/add"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addUserSkill_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/read"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserSkill_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getSkills
    request_path: "{{ data_service_prefix }}/v1/skills"
    upstream_url: "{{ learning_service_url }}/v1/skills"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getSkills_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/update"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserSkill_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: addUserSkillEndorsement
    request_path: "{{ user_service_prefix }}/v1/skill/endorse/add"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/endorse/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addUserSkillEndorsement_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAllData
    request_path: "{{ data_service_prefix }}/v1/object/read/list"
    upstream_url: "{{ learning_service_url }}/v1/object/read/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAllData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getData
    request_path: "{{ data_service_prefix }}/v1/object/read"
    upstream_url: "{{ learning_service_url }}/v1/object/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createData
    request_path: "{{ data_service_prefix }}/v1/object/create"
    upstream_url: "{{ learning_service_url }}/v1/object/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

  - name: updateData
    request_path: "{{ data_service_prefix }}/v1/object/update"
    upstream_url: "{{ learning_service_url }}/v1/object/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteData
    request_path: "{{ data_service_prefix }}/v1/object/delete"
    upstream_url: "{{ learning_service_url }}/v1/object/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteData_ACL | default(['dataAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchData
    request_path: "{{ data_service_prefix }}/v1/object/search"
    upstream_url: "{{ learning_service_url }}/v1/object/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createLocation
    request_path: "{{ org_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createLocation_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getLocation
    request_path: "{{ org_service_prefix }}/v1/location/read"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getLocation_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: deleteLocation
    request_path: "{{ org_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteLocation_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateLocation
    request_path: "{{ org_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateLocation_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: profileVisibility
    request_path: "{{ user_service_prefix }}/v1/profile/visibility"
    upstream_url: "{{ learning_service_url }}/v1/user/profile/visibility"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ profileVisibility_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: sendNotification
    request_path: "{{ data_service_prefix }}/v1/notification/send"
    upstream_url: "{{ learning_service_url }}/v1/notification/send"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ sendNotification_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: metricsSearchData
    request_path: "{{ data_service_prefix }}/v1/object/metrics"
    upstream_url: "{{ learning_service_url }}/v1/object/metrics"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ metricsSearchData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listSystemSettings
    request_path: "{{ data_service_prefix }}/v1/system/settings/list"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listSystemSettings_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getAudienceCount
    request_path: "{{ data_service_prefix }}/v1/notification/audience"
    upstream_url: "{{ learning_service_url }}/v1/notification/audience"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAudienceCount_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: generateDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/generate"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ generateDialcodes_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readDialcode_ACL | default(['dialcodeUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateDialcode_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listDialcodes_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishDialcode_ACL | default(['dialcodeAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchDialcodes_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: qrCodeBatchProcessStatus
    request_path: "{{ dialcode_service_prefix }}/v1/process/status"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ qrCodeBatchProcessStatus_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: qrCodeBatchProcessRetry
    request_path: "{{ dialcode_service_prefix }}/v1/process/retry"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/retry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ qrCodeBatchProcessRetry_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createPublisher_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updatePublisher_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readPublisher_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: linkDialcodeContent
    request_path: "{{ dialcode_service_prefix }}/v1/content/link"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/content/link"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ linkDialcodeContent_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readChannel
    request_path: "{{ channel_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listChannel
    request_path: "{{ channel_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listChannel_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchChannel
    request_path: "{{ channel_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchChannel_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createChannel
    request_path: "{{ channel_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createChannel_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateChannel
    request_path: "{{ channel_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateChannel_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFramework
    request_path: "{{ framework_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listFramework
    request_path: "{{ framework_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listFramework_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFramework
    request_path: "{{ framework_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFramework
    request_path: "{{ framework_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: copyFramework
    request_path: "{{ framework_service_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ copyFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readFrameworkTerm_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchFrameworkTerm_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createFrameworkTerm_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateFrameworkTerm_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readFrameworkCategory_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchFrameworkCategory_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createFrameworkCategory_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateFrameworkCategory_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCourseHierarchy
    request_path: '{{ course_service_prefix }}/v1/hierarchy/update'
    upstream_url: '{{ knowledge_mw_service_url }}/v1/course/hierarchy/update'
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - '{{ statsd_pulgin }}'
    - name: acl
      config.whitelist: "{{ updateCourseHierarchy_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: '{{ medium_rate_limit_per_hour }}'
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: '{{ small_request_size_limit }}'

  - name: createAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createAssertion_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAssertion_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAssertionList
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAssertionList_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: revokeAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ revokeAssertion_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createBadgeClass_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getBadgeClass_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchBadgeClass_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteBadgeClass_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createissuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createissuer_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getIssuerDetails
    request_path: "{{ badge_service_prefix }}/v1/issuer/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getIssuerDetails_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAllIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/list"
    upstream_url: "{{ learning_service_url }}/v1/issuer/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAllIssuer_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteIssuer_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createForm
    request_path: "{{ data_service_prefix }}/v1/form/create"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createForm_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateForm
    request_path: "{{ data_service_prefix }}/v1/form/update"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateForm_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: readForm
    request_path: "{{ data_service_prefix }}/v1/form/read"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationCreate
    request_path: "{{ data_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationCreate_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationUpdate
    request_path: "{{ data_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationUpdate_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationSearch
    request_path: "{{ data_service_prefix }}/v1/location/search"
    upstream_url: "{{ learning_service_url }}/v1/location/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationSearch_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationUpload
    request_path: "{{ data_service_prefix }}/v1/bulk/location/upload"
    upstream_url: "{{ learning_service_url }}/v1/bulk/location/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationUpload_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: copyContent
    request_path: "{{ content_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ copyContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: fetchURLMetaInformation
    request_path: "{{ content_prefix }}/v1/fetchmeta"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/url/fetchmeta"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ fetchURLMetaInformation_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishFramework
    request_path: "{{ framework_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: pluginSearch
    request_path: "{{ plugin_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/plugins/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ pluginSearch_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCollaborators
    request_path: "{{ content_prefix }}/v1/collaborator/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/collaborator/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateCollaborators_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: reserveDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/reserve"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/reserve"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ reserveDialcode_ACL | default(['dialcodeAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: releaseDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/release"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/release"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ releaseDialcode_ACL | default(['dialcodeAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createLock
    request_path: "{{ lock_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createLock_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: refreshLock
    request_path: "{{ lock_service_prefix }}/v1/refresh"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/refresh"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ refreshLock_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: retireLock
    request_path: "{{ lock_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireLock_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listLock
    request_path: "{{ lock_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listLock_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createSession
    request_path: "{{ sso_service_prefix }}/v1/create/session"
    upstream_url: "{{ player_service_url }}/v1/sso/create/session"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createSession_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  # Data pipeline

  - name: "deviceRegister"
    request_path: "/v3/device/register"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/v1/device/register"
    strip_request_path: true
    plugins:
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "deviceProfile"
    request_path: "/v3/device/profile"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/v1/device/profile"
    strip_request_path: true
    plugins:
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }   

  - name: "experimentcreate"
    request_path: "{{ data_service_prefix }}/v1/experiement/create"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/experiment/create"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ experimentcreate_ACL | default(['publicUser'])}}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }


  - name: "experimentread"
    request_path: "{{ data_service_prefix }}/v1/experiement/get"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/experiment/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ experimentread_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "addSystemSettings"
    request_path: "{{ data_service_prefix }}/v1/system/settings/set"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/set"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ addSystemSettings_ACL | default(['dataAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{  medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getSystemSettings"
    request_path: "{{ data_service_prefix }}/v1/system/settings/get"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{  medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }
     - name: acl
       config.whitelist: "{{ getSystemSettings_ACL | default(['publicUser','mobileApis']) }}"

  - name: onboardConsumer
    request_path: "{{ api_manager_perfix }}/v1/consumer/create/jwt"
    upstream_url: "{{ am_util_url }}/v1/consumer/create/jwt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ onboardConsumer_ACL | default(['kongConsumer']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: KongConsumerApi
    request_path: "{{ api_manager_perfix }}/v1/consumer"
    upstream_url: "{{ am_util_url }}/v1/consumer"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ KongConsumerApi_ACL | default(['kongConsumer']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/upload"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadTOC_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: downloadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/download"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ downloadTOC_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: acceptTermsAndCondition
    request_path: "{{ user_service_prefix }}/v1/tnc/accept"
    upstream_url: "{{ learning_service_url }}/v1/user/tnc/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ acceptTermsAndCondition_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: generateOtp
    request_path: "{{ otp_service_prefix }}/v1/generate"
    upstream_url: "{{ learning_service_url }}/v1/otp/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ generateOtp_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: verifyOtp
    request_path: "{{ otp_service_prefix }}/v1/verify"
    upstream_url: "{{ learning_service_url }}/v1/otp/verify"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ verifyOtp_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserByKey
    request_path: "{{ user_service_prefix  }}/v1/get"
    upstream_url: "{{ learning_service_url }}/v1/user/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserByKey_ACL | default(['appUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileAppTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileAppTeacherAid_ACL | default(['mobileAdminTeacherAid']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileDeviceTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileDeviceTeacherAid_ACL | default(['mobileAppTeacherAid']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: "contentBadgeLink"
    request_path: "{{ badge_service_prefix }}/v1/content/link"
    upstream_url: "{{ lms_service_url }}/v1/content/link"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ contentBadgeLink_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "contentBadgeUnLink"
    request_path: "{{ badge_service_prefix }}/v1/content/unlink"
    upstream_url: "{{ lms_service_url }}/v1/content/unlink"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ contentBadgeUnLink_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "privateUserUpdate"
    request_path: "{{ user_service_prefix }}/private/v1/update"
    upstream_url: "{{ learning_service_url }}/private/user/v1/update"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ privateUserUpdate_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getUserType"
    request_path: "{{ user_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/user/type/list"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ getUserType_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "masterLocationDelete"
    request_path: "{{data_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/location/delete"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ masterLocationDelete_ACL | default(['locationAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "privateUserRead"
    request_path: "{{ user_service_prefix }}/private/v1/read"
    upstream_url: "{{ learning_service_url }}/private/user/v1/read"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ privateUserRead_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: privateUserAssignRole
    request_path: "{{ user_service_prefix }}/private/v1/assign/role"
    upstream_url: "{{ learning_service_url }}/private/user/v1/assign/role"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl', config.whitelist: "{{ privateUserAssignRole_ACL | default(['publicUser'])}}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "telemetryErrorLogging"
    request_path: "/data/v1/client/logs"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/data/v1/client/logs"
    strip_request_path: true
    plugins:
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: generateCertificate
    request_path: "{{ cert_service_prefix }}/v1/certs/generate"
    upstream_url: "{{ cert_service_url }}/v1/certs/generate"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ generateCertificate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/create"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/create"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ createCertTemplate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/update"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/update"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ updateCertTemplate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: readCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/read"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/read"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ readCertTemplate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: "orgAssignKeys"
    request_path: "{{ org_service_prefix }}/v1/assign/key"
    upstream_url: "{{ learning_service_url }}/v1/org/assign/key"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "{{ orgAssignKeys_ACL | default(['orgAdmin']) }}"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "mergeUserAccounts"
    request_path: "{{ user_service_prefix }}/v1/account/merge"
    upstream_url: "{{ learning_service_url }}/private/user/v1/account/merge"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "{{ mergeUserAccounts_ACL | default(['publicUser','mobileApis']) }}"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: qrCodeDownload
    request_path: "{{ course_service_prefix }}/v1/qrcode/download"
    upstream_url: "{{ lms_service_url }}/v1/course/qrcode/download"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ qrCodeDownload_ACL | default(['courseUser']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseIssueCertificate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/issue"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/issue"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseIssueCertificate_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseBatchAddCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseBatchAddCertificateTemplate_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseBatchRemoveCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseBatchRemoveCertificateTemplate_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: downloadCertificate
    request_path: "{{ user_service_prefix }}/v1/certs/download"
    upstream_url: "{{ learning_service_url }}/v1/user/certs/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ downloadCertificate_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: UserBulkUploadv2
    request_path: "{{ user_service_prefix }}/v2/bulk/upload"
    upstream_url: "{{ learning_service_url }}/v2/bulk/user/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ UserBulkUploadv2_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: downloadRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/download"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ downloadRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: validateRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/validate"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/validate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ validateRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/add"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userMigrate
    request_path: "{{ user_service_prefix }}/v1/migrate"
    upstream_url: "{{ learning_service_url }}/v1/user/migrate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userMigrate_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: verifyRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/verify"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/verify"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ verifyRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateDesktopApp
    request_path: "{{ desktop_app_prefix }}/v1/update"
    upstream_url: "{{ player_service_url }}/v1/desktop/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateDesktopApp_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadCrashLogs
    request_path: "{{ desktop_app_prefix }}/v1/upload-crash-logs"
    upstream_url: "{{ player_service_url }}/v1/desktop/upload-crash-logs"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadCrashLogs_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userFeed
    request_path: "{{ user_service_prefix }}/v1/feed"
    upstream_url: "{{ learning_service_url }}/v1/user/feed"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userFeed_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: freshDesk
    request_path: "/tickets/v1/create"
    upstream_url: "{{ freshDesk_url }}/api/v2/tickets"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - name: request-transformer
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ freshDesk_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"
    - name: request-transformer
      config.replace.headers: "Authorization: Basic {{ freshDesk_token }}"

  - name: LicenseAPI
    request_path: "{{ license_api_prefix }}/v3"
    upstream_url: "{{ content_service_url }}/license/v3"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ LicenseAPI_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userExistenceApi
    request_path: "{{ user_service_prefix  }}/v1/exists"
    upstream_url: "{{ learning_service_url }}/v1/user/exists"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userExistenceApi_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserLearnerV3
    request_path: "{{ user_service_prefix }}/v1/signup"
    upstream_url: "{{ learning_service_url }}/v1/user/signup"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUserLearnerV3_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserVersion3
    request_path: "{{ user_service_prefix }}/v3/create"
    upstream_url: "{{ learning_service_url }}/v3/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUserVersion3_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: searchRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/search"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: readRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/read"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


# acceptContentFlag API DESCRIPTION: Accept the flagged content - via KMS
  - name: acceptContentFlag
    request_path: "{{ content_prefix }}/v1/flag/accept"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# acceptTermsAndCondition API DESCRIPTION: used to accent the terms and conditions
  - name: acceptTermsAndCondition
    request_path: "{{ user_service_prefix }}/v1/tnc/accept"
    upstream_url: "{{ learning_service_url }}/v1/user/tnc/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addBadgeToUser API DESCRIPTION: used to add badges to the issuer
  - name: addBadgeToUser
    request_path: "{{ user_service_prefix }}/v1/badges/add"
    upstream_url: "{{ learning_service_url }}/v1/user/badges/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addMember API DESCRIPTION: used to add member to an organisation
  - name: addMember
    request_path: "{{ org_service_prefix }}/v1/member/add"
    upstream_url: "{{ learning_service_url }}/v1/org/member/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addRegCertificate API DESCRIPTION: used to generate the certificate for the batch
  - name: addRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/add"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addSystemSettings API DESCRIPTION: used to create system settings
  - name: addSystemSettings
    request_path: "{{ data_service_prefix }}/v1/system/settings/set"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/set"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addUserSkill API DESCRIPTION: used to add a skill
  - name: addUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/add"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userCreate ']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addUserSkillEndorsement API DESCRIPTION: endorse skills for the user
  - name: addUserSkillEndorsement
    request_path: "{{ user_service_prefix }}/v1/skill/endorse/add"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/endorse/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# addUserToBatch API DESCRIPTION: Add Users to invite-only batch for a course
  - name: addUserToBatch
    request_path: "{{ course_service_prefix }}/v1/batch/user/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/users/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# assemblePage API DESCRIPTION: Fetches the data for entire page - fllter to page section
  - name: assemblePage
    request_path: "{{ data_service_prefix }}/v1/page/assemble"
    upstream_url: "{{ lms_service_url }}/v1/page/assemble"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# assignRole API DESCRIPTION: used to assign roles to user
  - name: assignRole
    request_path: "{{ user_service_prefix }}/v1/role/assign"
    upstream_url: "{{ learning_service_url }}/v1/user/assign/role"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

# batchBulkEnrolment API DESCRIPTION: enroll all users provided in the csv
  - name: batchBulkEnrolment
    request_path: "{{ course_service_prefix }}/v1/batch/bulk/enrollment"
    upstream_url: "{{ lms_service_url }}/v1/batch/bulk/enrollment"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# batchBulkUnEnrolment API DESCRIPTION: to unenroll more than one user from a batch
  - name: batchBulkUnEnrolment
    request_path: "{{ course_service_prefix }}/v1/batch/bulk/unenrollment"
    upstream_url: "{{ lms_service_url }}/v1/batch/bulk/unenrollment"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# blockUser API DESCRIPTION: used to block the user
  - name: blockUser
    request_path: "{{ user_service_prefix }}/v1/block"
    upstream_url: "{{ learning_service_url }}/v1/user/block"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# checkUploadJobStatus API DESCRIPTION: used to check the uploaded bulk user/org creation status
  - name: checkUploadJobStatus
    request_path: "{{ data_service_prefix }}/v1/upload/status"
    upstream_url: "{{ learning_service_url }}/v1/upload/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgSuperAdmin--userSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# compositeSearch API DESCRIPTION: Search service API
  - name: compositeSearch
    request_path: "{{ composite_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin--contentTempAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# contentBadgeLink API DESCRIPTION: to associate badge information for a given content
  - name: contentBadgeLink
    request_path: "{{ badge_service_prefix }}/v1/content/link"
    upstream_url: "{{ lms_service_url }}/v1/content/link"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# contentBadgeUnLink API DESCRIPTION: to remove a badge from a content
  - name: contentBadgeUnLink
    request_path: "{{ badge_service_prefix }}/v1/content/unlink"
    upstream_url: "{{ lms_service_url }}/v1/content/unlink"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# copyContent API DESCRIPTION: makes a copy of a content along with artefacts
  - name: copyContent
    request_path: "{{ content_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# copyFramework API DESCRIPTION: Copies an existing framework(taxonomy)
  - name: copyFramework
    request_path: "{{ framework_service_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# courseBatchAddCertificateTemplate API DESCRIPTION: Adds certificate template to a course batch
  - name: courseBatchAddCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# courseBatchRemoveCertificateTemplate API DESCRIPTION: to remove a certificate template from course batch
  - name: courseBatchRemoveCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# courseEnrolment API DESCRIPTION: Enroll user to an open batch
  - name: courseEnrolment
    request_path: "{{ course_service_prefix }}/v1/enrol"
    upstream_url: "{{ lms_service_url }}/v1/course/enroll"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# courseIssueCertificate API DESCRIPTION: Issue certificate for all users of a batch
  - name: courseIssueCertificate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/issue"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/issue"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# courseUnEnrolment API DESCRIPTION: To unenroll the user from an open batch
  - name: courseUnEnrolment
    request_path: "{{ course_service_prefix }}/v1/unenrol"
    upstream_url: "{{ lms_service_url }}/v1/course/unenroll"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createAssertion API DESCRIPTION: used to assign badge
  - name: createAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createBadgeClass API DESCRIPTION: used to craete a new badge
  - name: createBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createBatch API DESCRIPTION: create a course batch
  - name: createBatch
    request_path: "{{ course_service_prefix }}/v1/batch/create"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createCertTemplate API DESCRIPTION: creates a certificate template
  - name: createCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/create"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createChannel API DESCRIPTION: create channel 
  - name: createChannel
    request_path: "{{ channel_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['channelCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createContent API DESCRIPTION: Content create api with authentication
  - name: createContent
    request_path: "{{ content_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createCourse API DESCRIPTION: Create API to create a course
  - name: createCourse
    request_path: "{{ course_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createData API DESCRIPTION: used for sunbird plugin to create announcement related data
  - name: createData
    request_path: "{{ data_service_prefix }}/v1/object/create"
    upstream_url: "{{ learning_service_url }}/v1/object/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createForm API DESCRIPTION: used to create form
  - name: createForm
    request_path: "{{ data_service_prefix }}/v1/form/create"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['formCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createFramework API DESCRIPTION: creates a framework
  - name: createFramework
    request_path: "{{ framework_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createFrameworkCategory API DESCRIPTION: creates framework category
  - name: createFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createFrameworkTerm API DESCRIPTION: Creates a framework term
  - name: createFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createissuer API DESCRIPTION: used to create an issuer for the badge class.
  - name: createissuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createLocation API DESCRIPTION: used to create geo location for an organization
  - name: createLocation
    request_path: "{{ org_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createLock API DESCRIPTION: used to create a lock to content edition
  - name: createLock
    request_path: "{{ lock_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createNote API DESCRIPTION: used to create a note realeted to course/self
  - name: createNote
    request_path: "{{ notes_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/note/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['noteCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createOrg API DESCRIPTION: used to create an org
  - name: createOrg
    request_path: "{{ org_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/org/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createOrgType API DESCRIPTION: used to create the type of organisation like [NGO/Government]
  - name: createOrgType
    request_path: "{{ org_service_prefix }}/v1/type/create"
    upstream_url: "{{ learning_service_url }}/v1/org/type/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createPage API DESCRIPTION: To create a page object which contains sections for fetching content.
  - name: createPage
    request_path: "{{ data_service_prefix }}/v1/page/create"
    upstream_url: "{{ lms_service_url }}/v1/page/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['pageCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createPageSection API DESCRIPTION: Create API page section in the UI like resources, helpul for search purpose
  - name: createPageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/create"
    upstream_url: "{{ lms_service_url }}/v1/page/section/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['pageCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createPublisher API DESCRIPTION: used to create dialcode publisher details, used by implementation team
  - name: createPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createSession API DESCRIPTION: used to create sso session
  - name: createSession
    request_path: "{{ sso_service_prefix }}/v1/create/session"
    upstream_url: "{{ player_service_url }}/v1/sso/create/session"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['ssoAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createUser API DESCRIPTION: used to create user
  - name: createUser
    request_path: "{{ user_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createUserLearnerV3 API DESCRIPTION: used to create a user in custodian org.
  - name: createUserLearnerV3
    request_path: "{{ user_service_prefix }}/v1/signup"
    upstream_url: "{{ learning_service_url }}/v1/user/signup"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createUserVersion2 API DESCRIPTION: used to create user with optional username
  - name: createUserVersion2
    request_path: "{{ user_service_prefix }}/v2/create"
    upstream_url: "{{ learning_service_url }}/v2/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# createUserVersion3 API DESCRIPTION: API will return response after getting sync with ES.
  - name: createUserVersion3
    request_path: "/api/user/v3/create"
    upstream_url: "{{ learning_service_url }}/v3/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deleteBadgeClass API DESCRIPTION: used to delete badge
  - name: deleteBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deleteData API DESCRIPTION: used for sunbird plugin to delete announcement related data
  - name: deleteData
    request_path: "{{ data_service_prefix }}/v1/object/delete"
    upstream_url: "{{ learning_service_url }}/v1/object/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deleteIssuer API DESCRIPTION: used to delete the issuers
  - name: deleteIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deleteLocation API DESCRIPTION: deletes the created location for topic based push notification
  - name: deleteLocation
    request_path: "{{ org_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deleteNote API DESCRIPTION: used to delete a note
  - name: deleteNote
    request_path: "{{ notes_service_prefix }}/v1/delete"
    upstream_url: "{{ learning_service_url }}/v1/note/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['noteAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deviceProfile API DESCRIPTION: used to get the location of user declartion and IP reloved loaction
  - name: deviceProfile
    request_path: "/v3/device/profile"
    upstream_url: "http://11.2.4.21:9000/v1/device/profile"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['deviceCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# deviceRegister API DESCRIPTION: used to add the location information with the device registration
  - name: deviceRegister
    request_path: "/v3/device/register"
    upstream_url: "http://11.2.4.21:9000/v1/device/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['deviceCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# dialAssemble API DESCRIPTION: like a filter to page section
  - name: dialAssemble
    request_path: "{{ data_service_prefix }}/v1/dial/assemble"
    upstream_url: "{{ lms_service_url }}/v1/page/assemble"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# downloadCertificate API DESCRIPTION: download the certificate specifically for mobile devices
  - name: downloadCertificate
    request_path: "/v1/user/certs/download"
    upstream_url: "{{ lms_service_url }}/v1/user/certs/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# downloadRegCertificate API DESCRIPTION: download the certificate
  - name: downloadRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/download"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateAccess ']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# downloadTOC API DESCRIPTION: used to download table of content for the text book
  - name: downloadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/download"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# echo API DESCRIPTION: used in sso authentication
  - name: echo
    request_path: "{{ echo_service_prefix }}"
    upstream_url: "{{ echo_service_url }}"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['ssoCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# experimentcreate API DESCRIPTION: used to create an expirement
  - name: experimentcreate
    request_path: "{{ data_service_prefix }}/v1/experiement/create"
    upstream_url: "http://11.2.4.21:9000/experiment/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['experimentCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# experimentread API DESCRIPTION: used to read the expiriment created
  - name: experimentread
    request_path: "{{ data_service_prefix }}/v1/experiement/get"
    upstream_url: "http://11.2.4.21:9000/experiment/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['expirementAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# fetchURLMetaInformation API DESCRIPTION: to fetch the metadata of a given URL
  - name: fetchURLMetaInformation
    request_path: "{{ content_prefix }}/v1/fetchmeta"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/url/fetchmeta"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# flagContent API DESCRIPTION: Flag an inappropriate content
  - name: flagContent
    request_path: "{{ content_prefix }}/v1/flag"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# freshDesk API DESCRIPTION: used to raise tickets from offline desktop
  - name: freshDesk
    request_path: "/tickets/v1/create"
    upstream_url: "http://dummy.freshDesk.url/api/v2/tickets"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# generateCertificate API DESCRIPTION: used to generate certificate
  - name: generateCertificate
    request_path: "{{ cert_service_prefix }}/v1/certs/generate"
    upstream_url: "{{ cert_service_url }}/v1/certs/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# generateDialcodes API DESCRIPTION: Create dialcodes API
  - name: generateDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/generate"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# generateOtp API DESCRIPTION: used to generate an OTP
  - name: generateOtp
    request_path: "{{ otp_service_prefix }}/v1/generate"
    upstream_url: "{{ learning_service_url }}/v1/otp/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getAllData API DESCRIPTION: used for sunbird plugin to get list announcement related data
  - name: getAllData
    request_path: "{{ data_service_prefix }}/v1/object/read/list"
    upstream_url: "{{ learning_service_url }}/v1/object/read/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getAllIssuer API DESCRIPTION: used to list the availble issuers
  - name: getAllIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/list"
    upstream_url: "{{ learning_service_url }}/v1/issuer/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getAssertion API DESCRIPTION: used to get the assertion details base on assertion ID
  - name: getAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# getAssertionList API DESCRIPTION: used to search badge
  - name: getAssertionList
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# getAudienceCount API DESCRIPTION: user count for receiving announcement
  - name: getAudienceCount
    request_path: "{{ data_service_prefix }}/v1/notification/audience"
    upstream_url: "{{ learning_service_url }}/v1/notification/audience"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['announcementAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getBadgeClass API DESCRIPTION: get the badge details based on the badge ID
  - name: getBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getBatch API DESCRIPTION: read course batch details
  - name: getBatch
    request_path: "{{ course_service_prefix }}/v1/batch/read"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getContentUploadUrl API DESCRIPTION: used to upload content like pdf jpeg, mp4 in browse
  - name: getContentUploadUrl
    request_path: "{{ content_prefix }}/v1/upload/url/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/upload/url"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getCourseConsumptionDashboard API DESCRIPTION: CSV report for the course consumption dashboard
  - name: getCourseConsumptionDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/course"
    upstream_url: "{{ lms_service_url }}/v1/dashboard/consumption/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getCourseHierarchy API DESCRIPTION: To read the hierarchy of a course
  - name: getCourseHierarchy
    request_path: "{{ course_service_prefix }}/v1/hierarchy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/hierarchy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getCourseProgressDashboard API DESCRIPTION: fetch the course batch completion status
  - name: getCourseProgressDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/progress/course"
    upstream_url: "{{ lms_service_url }}/v1/dashboard/progress/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getCourseProgressDashboardV2 API DESCRIPTION: NA
  - name: getCourseProgressDashboardV2
    request_path: "{{ dashboard_service_prefix }}/v2/progress/course"
    upstream_url: "{{ lms_service_url }}/v2/dashboard/progress/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getData API DESCRIPTION: used for sunbird plugin to get announcement related data
  - name: getData
    request_path: "{{ data_service_prefix }}/v1/object/read"
    upstream_url: "{{ learning_service_url }}/v1/object/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getIssuerDetails API DESCRIPTION: used to read the issuer details
  - name: getIssuerDetails
    request_path: "{{ badge_service_prefix }}/v1/issuer/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getLocation API DESCRIPTION: used to read geo location for an organization
  - name: getLocation
    request_path: "{{ org_service_prefix }}/v1/location/read"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getMediaTypes API DESCRIPTION: used to display the social media accounts with the user
  - name: getMediaTypes
    request_path: "{{ user_service_prefix }}/v1/mediatype/list"
    upstream_url: "{{ learning_service_url }}/v1/user/mediatype/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getPageSettings API DESCRIPTION: To read the page config along with it's sections.
  - name: getPageSettings
    request_path: "{{ data_service_prefix }}/v1/page/read"
    upstream_url: "{{ lms_service_url }}/v1/page/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['pageAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# getParticipants API DESCRIPTION: Lists all participants of course batch
  - name: getParticipants
    request_path: "{{ course_service_prefix }}/v1/batch/participants/list"
    upstream_url: "{{ lms_service_url }}/v1/batch/participants/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getSkills API DESCRIPTION: used to get all the available skills in system
  - name: getSkills
    request_path: "{{ data_service_prefix }}/v1/skills"
    upstream_url: "{{ learning_service_url }}/v1/skills"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getSystemSettings API DESCRIPTION: used to get the system settings
  - name: getSystemSettings
    request_path: "{{ data_service_prefix }}/v1/system/settings/get"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getTenantInfo API DESCRIPTION: gives the tenant information like logo and URL's for specific tenant
  - name: getTenantInfo
    request_path: "{{ org_service_prefix }}/v1/tenant/info"
    upstream_url: "{{ player_service_url }}/v1/tenant/info"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getUploadJobStatusLink API DESCRIPTION: used to download the bulk uploaded response from the azure blob
  - name: getUploadJobStatusLink
    request_path: "{{ data_service_prefix }}/v1/upload/statusDownloadLink"
    upstream_url: "{{ learning_service_url }}/v1/upload/statusDownloadLink"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgSuperAdmin--userSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getUserByKey API DESCRIPTION: used to get the key like email, phone
  - name: getUserByKey
    request_path: "{{ user_service_prefix }}/v1/get"
    upstream_url: "{{ learning_service_url }}/v1/user/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getUserConsumptionDasbhoard API DESCRIPTION: user consumption dahboard 
  - name: getUserConsumptionDasbhoard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/user"
    upstream_url: "{{ learning_service_url }}/v1/dashboard/consumption/user"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# getUserProfile API DESCRIPTION: used to read the user
  - name: getUserProfile
    request_path: "{{ user_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# getUserProfileV2 API DESCRIPTION: used to get user profile data 
  - name: getUserProfileV2
    request_path: "{{ user_service_prefix }}/v2/read"
    upstream_url: "{{ learning_service_url }}/v2/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# getUserSkill API DESCRIPTION: used to read the skill details for the user
  - name: getUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/read"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# getUserType API DESCRIPTION: used to get list of user type
  - name: getUserType
    request_path: "{{ user_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/user/type/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# indexSync API DESCRIPTION: used to sync org or user
  - name: indexSync
    request_path: "{{ data_service_prefix }}/v1/index/sync"
    upstream_url: "{{ learning_service_url }}/v1/data/sync"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAdmin--orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# ItemSetAPIs API DESCRIPTION: CRUD operations on ItemSet(collecion of questions)
  - name: ItemSetAPIs
    request_path: "{{ itemset_prefix }}/v1"
    upstream_url: "{{ knowledge_mw_service_url }}/itemset/v1"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['itemSetAdmin ']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# KongConsumerApi API DESCRIPTION: used to perform any operation on consumer
  - name: KongConsumerApi
    request_path: "{{ api_manager_perfix }}/v1/consumer"
    upstream_url: "{{ am_util_url }}/v1/consumer"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['kongConsumerAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# LicenseAPI API DESCRIPTION: CRUD operation on license object for neo4j and redis
  - name: LicenseAPI
    request_path: "{{ license_api_prefix }}/v3"
    upstream_url: "{{ content_service_url }}/license/v3"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# linkDialcodeContent API DESCRIPTION: Links dialcodes to content
  - name: linkDialcodeContent
    request_path: "{{ dialcode_service_prefix }}/v1/content/link"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/content/link"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listAllBadges API DESCRIPTION: used to list the availlable badges
  - name: listAllBadges
    request_path: "{{ org_service_prefix }}/v1/badges/list"
    upstream_url: "{{ learning_service_url }}/v1/badges/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listChannel API DESCRIPTION: Lists channels based on filters
  - name: listChannel
    request_path: "{{ channel_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['channelAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listCourseBatches API DESCRIPTION: Lists al the course batches based on filter criteria
  - name: listCourseBatches
    request_path: "{{ course_service_prefix }}/v1/batch/list"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listCourseEnrollments API DESCRIPTION: list the courses enrolled by a user
  - name: listCourseEnrollments
    request_path: "{{ course_service_prefix }}/v1/user/enrollment/list"
    upstream_url: "{{ lms_service_url }}/v1/user/courses/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listDialcodes API DESCRIPTION: Lists dialcodes based on filter criteria
  - name: listDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listFramework API DESCRIPTION: List framework details based on criteria
  - name: listFramework
    request_path: "{{ framework_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listLock API DESCRIPTION: used to list the existing locks to the contents
  - name: listLock
    request_path: "{{ lock_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

# listOrdinals API DESCRIPTION: to fetch static meta information for clients[mobile app] to use for example supported languages etc..
  - name: listOrdinals
    request_path: "{{ meta_service_prefix }}/v1/ordinals/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/ordinals/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listOrgTypes API DESCRIPTION: list of avaialble org categorisation.
  - name: listOrgTypes
    request_path: "{{ org_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/org/type/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listPageSections API DESCRIPTION: List API page section in the UI like resources, helpul for search purpose
  - name: listPageSections
    request_path: "{{ data_service_prefix }}/v1/page/section/list"
    upstream_url: "{{ lms_service_url }}/v1/page/section/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['pageAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# listResourceBundles API DESCRIPTION: used to get the language specific translation
  - name: listResourceBundles
    request_path: "{{ meta_service_prefix }}/v1/resourcebundles/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/resourcebundles/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess ']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# listSystemSettings API DESCRIPTION: used to list the system settings
  - name: listSystemSettings
    request_path: "{{ data_service_prefix }}/v1/system/settings/list"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# listTerms API DESCRIPTION: list all the terms for the domain
  - name: listTerms
    request_path: "{{ meta_service_prefix }}/v1/terms/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/terms/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# masterLocationCreate API DESCRIPTION: used to create a location 
  - name: masterLocationCreate
    request_path: "{{ data_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# masterLocationDelete API DESCRIPTION: used to delete the location
  - name: masterLocationDelete
    request_path: "{{ data_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/location/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# masterLocationSearch API DESCRIPTION: used to search the location based on the filter
  - name: masterLocationSearch
    request_path: "{{ data_service_prefix }}/v1/location/search"
    upstream_url: "{{ learning_service_url }}/v1/location/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# masterLocationUpdate API DESCRIPTION: used to update metadata of location
  - name: masterLocationUpdate
    request_path: "{{ data_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# masterLocationUpload API DESCRIPTION: used to bulk upload the location
  - name: masterLocationUpload
    request_path: "{{ data_service_prefix }}/v1/bulk/location/upload"
    upstream_url: "{{ learning_service_url }}/v1/bulk/location/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['locationSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# mergeUserAccounts API DESCRIPTION: used to merge the user account
  - name: mergeUserAccounts
    request_path: "{{ user_service_prefix }}/v1/account/merge"
    upstream_url: "{{ learning_service_url }}/private/user/v1/account/merge"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# metricsSearchData API DESCRIPTION: get the announcemnt metrics like announcemnt date, channnels, number of announcemnts made and stuff
  - name: metricsSearchData
    request_path: "{{ data_service_prefix }}/v1/object/metrics"
    upstream_url: "{{ learning_service_url }}/v1/object/metrics"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# onboardConsumer API DESCRIPTION: used to create a jwt for the consumer
  - name: onboardConsumer
    request_path: "{{ api_manager_perfix }}/v1/consumer/create/jwt"
    upstream_url: "{{ am_util_url }}/v1/consumer/create/jwt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['kongConsumerAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# orgAssignKeys API DESCRIPTION: used to assign keys to sign the certificate for the org
  - name: orgAssignKeys
    request_path: "{{ org_service_prefix }}/v1/assign/key"
    upstream_url: "{{ learning_service_url }}/v1/org/assign/key"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# orgBulkUpload API DESCRIPTION: used to upload csv file to create multiple orgs
  - name: orgBulkUpload
    request_path: "{{ org_service_prefix }}/v1/upload"
    upstream_url: "{{ learning_service_url }}/v1/org/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# pluginSearch API DESCRIPTION: used to search all the availble plugins fpor the editior 
  - name: pluginSearch
    request_path: "{{ plugin_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/plugins/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['pluginAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# PrivateContentCreateAPIs API DESCRIPTION: Create API which hits directly content-service(KP)
  - name: PrivateContentCreateAPIs
    request_path: "{{ private_content_prefix }}/v3/create"
    upstream_url: "{{ content_service_url }}/content/v3/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# PrivateContentReadAPIs API DESCRIPTION: Content read api which directly hits content-service(KP)
  - name: PrivateContentReadAPIs
    request_path: "{{ private_content_prefix }}/v3/read"
    upstream_url: "{{ content_service_url }}/content/v3/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# PrivateContentUpdateAPIs API DESCRIPTION: Content Update API for metadata of content which hits directly content-service(KP)
  - name: PrivateContentUpdateAPIs
    request_path: "{{ private_content_prefix }}/v3/update"
    upstream_url: "{{ content_service_url }}/content/v3/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# privateUserAssignRole API DESCRIPTION: used to assign role
  - name: privateUserAssignRole
    request_path: "{{ user_service_prefix }}/private/v1/assign/role"
    upstream_url: "{{ learning_service_url }}/private/user/v1/assign/role"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# privateUserRead API DESCRIPTION: used to read user data
  - name: privateUserRead
    request_path: "{{ user_service_prefix }}/private/v1/read"
    upstream_url: "{{ learning_service_url }}/private/user/v1/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userSuperAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# privateUserUpdate API DESCRIPTION: used to update user profile but validating who is updating user data by default user can update his own profile
  - name: privateUserUpdate
    request_path: "{{ user_service_prefix }}/private/v1/update"
    upstream_url: "{{ learning_service_url }}/private/user/v1/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# profileVisibility API DESCRIPTION: used to make any profile details as public/profile
  - name: profileVisibility
    request_path: "{{ user_service_prefix }}/v1/profile/visibility"
    upstream_url: "{{ learning_service_url }}/v1/user/profile/visibility"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# publishContent API DESCRIPTION: Publish the content to make it Live
  - name: publishContent
    request_path: "{{ content_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# publishCourse API DESCRIPTION: Publishes course
  - name: publishCourse
    request_path: "{{ course_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# publishDialcode API DESCRIPTION: Publishes the dialcodes
  - name: publishDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# publishFramework API DESCRIPTION: publish the framework
  - name: publishFramework
    request_path: "{{ framework_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# qrCodeBatchProcessRetry API DESCRIPTION: to retry generation of qrcode for a process ID
  - name: qrCodeBatchProcessRetry
    request_path: "{{ dialcode_service_prefix }}/v1/process/retry"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/retry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# qrCodeBatchProcessStatus API DESCRIPTION: get the check if diacode is created.
  - name: qrCodeBatchProcessStatus
    request_path: "{{ dialcode_service_prefix }}/v1/process/status"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# qrCodeDownload API DESCRIPTION: to generate and download csv report with qr code links for linked dialcode at course layer
  - name: qrCodeDownload
    request_path: "{{ course_service_prefix }}/v1/qrcode/download"
    upstream_url: "{{ lms_service_url }}/v1/course/qrcode/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readCertTemplate API DESCRIPTION: read a certificate template
  - name: readCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/read"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateAccess ']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readChannel API DESCRIPTION: Channel read API
  - name: readChannel
    request_path: "{{ channel_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readContent API DESCRIPTION: read the content
  - name: readContent
    request_path: "{{ content_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readContentState API DESCRIPTION: To fetch the learner progress for a course batch
  - name: readContentState
    request_path: "{{ course_service_prefix }}/v1/content/state/read"
    upstream_url: "{{ lms_service_url }}/v1/content/state/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readCourse API DESCRIPTION: read a course created
  - name: readCourse
    request_path: "{{ course_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readCourseEnrollment API DESCRIPTION: to fetch the list of enrolled courses of a user
  - name: readCourseEnrollment
    request_path: "{{ course_service_prefix }}/v1/user/enrollment/read"
    upstream_url: "{{ lms_service_url }}/v1/user/courses/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readDialcode API DESCRIPTION: To fetch the dialcode
  - name: readDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readForm API DESCRIPTION: used to read the form data
  - name: readForm
    request_path: "{{ data_service_prefix }}/v1/form/read"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readFramework API DESCRIPTION: fetches framework (taxonomy)
  - name: readFramework
    request_path: "{{ framework_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readFrameworkCategory API DESCRIPTION: Fetch a framework category
  - name: readFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readFrameworkTerm API DESCRIPTION: Fetch a framework term
  - name: readFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readNote API DESCRIPTION: used to read the created note data
  - name: readNote
    request_path: "{{ notes_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/note/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['noteAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# readOrg API DESCRIPTION: used to read the organisation details
  - name: readOrg
    request_path: "{{ org_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/org/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# readPageSection API DESCRIPTION: Read API page section in the UI like resources, helpul for search purpose
  - name: readPageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/read"
    upstream_url: "{{ lms_service_url }}/v1/page/section/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['pageAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# readPublisher API DESCRIPTION: used to read dialcode publisher details, used by implementation team
  - name: readPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# readRegCertificate API DESCRIPTION: API will return response after getting sync with ES.
  - name: readRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/read"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# readRoleMapping API DESCRIPTION: used to read the available roles for a system 
  - name: readRoleMapping
    request_path: "{{ data_service_prefix }}/v1/role/read"
    upstream_url: "{{ learning_service_url }}/v1/role/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# readUserProfile API DESCRIPTION: used to get user profile from more filters like user,email, external ID
  - name: readUserProfile
    request_path: "{{ user_service_prefix }}/v1/profile/read"
    upstream_url: "{{ learning_service_url }}/v1/user/getuser"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerDesktopApp API DESCRIPTION: 
  - name: registerDesktopApp
    request_path: ""
    upstream_url: ""
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['desktopAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerDesktopDevice API DESCRIPTION: 
  - name: registerDesktopDevice
    request_path: ""
    upstream_url: ""
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['desktopApp']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# refreshLock API DESCRIPTION: used to refresh a lock to content edition to release or continue
  - name: refreshLock
    request_path: "{{ lock_service_prefix }}/v1/refresh"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/refresh"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerMobileApp API DESCRIPTION: used to register mobile app
  - name: registerMobileApp
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['mobileSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerMobileAppOpenRAP API DESCRIPTION: used to register mobile APP for openrap
  - name: registerMobileAppOpenRAP
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_openrap/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_openrap/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['mobileOpenRAPSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerMobileAppTeacherAid API DESCRIPTION: used to register mobile APP for teacher aid
  - name: registerMobileAppTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['mobileTeacherAidSuperAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerMobileDevice API DESCRIPTION: used to register mobile device
  - name: registerMobileDevice
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['mobileAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerMobileDeviceOpenRAP API DESCRIPTION: used to register mobile openrap device
  - name: registerMobileDeviceOpenRAP
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_openrap/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_openrap/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['mobileOpenRAPAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# registerMobileDeviceTeacherAid API DESCRIPTION: used to register mobile device for teacher aid
  - name: registerMobileDeviceTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['mobileTeacherAidAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# rejectContent API DESCRIPTION: Content reject API with authentication
  - name: rejectContent
    request_path: "{{ content_prefix }}/v1/reject"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/reject"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# rejectContentFlag API DESCRIPTION: used to reject the flag for the content
  - name: rejectContentFlag
    request_path: "{{ content_prefix }}/v1/flag/reject"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag/reject"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# releaseDialcode API DESCRIPTION: releases reserved dialcodes for a textbook
  - name: releaseDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/release"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/release"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# removeMember API DESCRIPTION: used to remove the user from org
  - name: removeMember
    request_path: "{{ org_service_prefix }}/v1/member/remove"
    upstream_url: "{{ learning_service_url }}/v1/org/member/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['orgAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# removeUserFromBatch API DESCRIPTION: remove users from invite-only batch
  - name: removeUserFromBatch
    request_path: "{{ course_service_prefix }}/v1/batch/user/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/users/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# reserveDialcode API DESCRIPTION: Reserves the number of the dialcodes sepcified for a particular textbook
  - name: reserveDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/reserve"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/reserve"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# retireContent API DESCRIPTION: Retire a content
  - name: retireContent
    request_path: "{{ content_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# retireCourse API DESCRIPTION: retires a course
  - name: retireCourse
    request_path: "{{ course_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# retireLock API DESCRIPTION: used to remove the lock on the content
  - name: retireLock
    request_path: "{{ lock_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# revokeAssertion API DESCRIPTION: used to revoke the badge
  - name: revokeAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchBadgeClass API DESCRIPTION: used to search the badge search based on ID filters
  - name: searchBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['badgeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchChannel API DESCRIPTION: searches channel based on filters
  - name: searchChannel
    request_path: "{{ channel_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['channelAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchContent API DESCRIPTION: used to search the content
  - name: searchContent
    request_path: "{{ content_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchCourse API DESCRIPTION: Search API get list of courses
  - name: searchCourse
    request_path: "{{ course_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchData API DESCRIPTION: search the announcement related data
  - name: searchData
    request_path: "{{ data_service_prefix }}/v1/object/search"
    upstream_url: "{{ learning_service_url }}/v1/object/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchDialcodes API DESCRIPTION: search dialcodes based on filters
  - name: searchDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchFrameworkCategory API DESCRIPTION: To Search categories of a given framework
  - name: searchFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchFrameworkTerm API DESCRIPTION: used to search terms in the domain[Framwork] 
  - name: searchFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['frameworkAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchNotes API DESCRIPTION: used to search the note created
  - name: searchNotes
    request_path: "{{ notes_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/note/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['noteAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchOrg API DESCRIPTION: used to search the organisation
  - name: searchOrg
    request_path: "{{ org_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/org/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['NOACL']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchRegCertificate API DESCRIPTION: API will return response after getting sync with ES.
  - name: searchRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/search"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# searchUser API DESCRIPTION: used to search the users based on filter
  - name: searchUser
    request_path: "{{ user_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/user/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userTempAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# sendEmailNotification API DESCRIPTION: send email/sms for any activity like create content/publish content.
  - name: sendEmailNotification
    request_path: "{{ user_service_prefix }}/v1/notification/email"
    upstream_url: "{{ learning_service_url }}/v1/notification/email"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# sendNotification API DESCRIPTION: used to send notiofication FCM
  - name: sendNotification
    request_path: "{{ data_service_prefix }}/v1/notification/send"
    upstream_url: "{{ learning_service_url }}/v1/notification/send"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# submitContentForReview API DESCRIPTION: Content review API with authentication
  - name: submitContentForReview
    request_path: "{{ content_prefix }}/v1/review"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/review"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# submitCourseForReview API DESCRIPTION: to submit course for review
  - name: submitCourseForReview
    request_path: "{{ course_service_prefix }}/v1/review"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/review"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

# telemetry API DESCRIPTION: used to upload telemetry
  - name: telemetry
    request_path: "{{ data_service_prefix }}/v1/telemetry"
    upstream_url: "{{ telemetry_service_url }}/v1/telemetry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['telemetryCreate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# telemetryErrorLogging API DESCRIPTION: used for mobile crashed logs
  - name: telemetryErrorLogging
    request_path: "{{ data_service_prefix }}/v1/client/logs"
    upstream_url: "http://11.2.4.21:9000/data/v1/client/logs"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['telemetryCreate ']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# unblockUser API DESCRIPTION: used to unblock the user
  - name: unblockUser
    request_path: "{{ user_service_prefix }}/v1/unblock"
    upstream_url: "{{ learning_service_url }}/v1/user/unblock"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['userAdmin']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateBatch API DESCRIPTION: to update the course batch
  - name: updateBatch
    request_path: "{{ course_service_prefix }}/v1/batch/update"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateCertTemplate API DESCRIPTION: updates a certificate template
  - name: updateCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/update"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['certificateUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateChannel API DESCRIPTION: updates channel metadata
  - name: updateChannel
    request_path: "{{ channel_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['channelUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateCollaborators API DESCRIPTION: used to update the collaborator for a resource
  - name: updateCollaborators
    request_path: "{{ content_prefix }}/v1/collaborator/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/collaborator/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateContent API DESCRIPTION: Update the content metadata and relations
  - name: updateContent
    request_path: "{{ content_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['contentUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateContentState API DESCRIPTION: Update the learner progress on a content in a course consumption
  - name: updateContentState
    request_path: "{{ course_service_prefix }}/v1/content/state/update"
    upstream_url: "{{ lms_service_url }}/v1/content/state/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseAccess']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateCourse API DESCRIPTION: Update API for courses
  - name: updateCourse
    request_path: "{{ course_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateCourseHierarchy API DESCRIPTION: to update the hierarchy of a course
  - name: updateCourseHierarchy
    request_path: "{{ course_service_prefix }}/v1/hierarchy/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/hierarchy/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['courseUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateData API DESCRIPTION: used for sunbird plugin to update announcement related data
  - name: updateData
    request_path: "{{ data_service_prefix }}/v1/object/update"
    upstream_url: "{{ learning_service_url }}/v1/object/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['objectUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateDesktopApp API DESCRIPTION: used to download the desktop app
  - name: updateDesktopApp
    request_path: "{{ desktop_app_prefix }}/v1/update"
    upstream_url: "{{ player_service_url }}/v1/desktop/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['appAcces']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

# updateDialcode API DESCRIPTION: Updates metadata of dialcode
  - name: updateDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{ statsd_pulgin }"
    - name: acl
      config.whitelist: "['dialcodeUpdate']"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"
